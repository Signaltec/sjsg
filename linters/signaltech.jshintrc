{
  /*
   * ENVIRONMENTS
   * =================
   */

  // Define globals exposed by modern browsers.
  "browser": true,

  // Define globals exposed by jQuery.
  "jquery": true,

  // Define globals exposed by Node.js.
  "node": true,

  // Define globals exposed by Jasmine unit testing framework.
  "jasmine": true,


  /*
   * ENFORCING OPTIONS
   * =================
   */

  // Force all variable names to use either camelCase style or UPPER_CASE
  // with underscores.
  "camelcase": true,

  // Requires to always put curly braces around blocks in loops and conditionals
  "curly": true,

  // Prohibits use of nonstrict compairing operators
  "eqeqeq": true,

  // Requires to filter items in 'for..in' loops by hasOwnProperty
  "forin": true,

  // Prohibits overwriting prototypes of native objects
  "freeze": true,

  // Prohibits accessing to variables which was declared
  // inside of control structures previously
  "funcscope": false,

  // Enable warnings about the use of identifiers
  // which are defined in future versions of JavaScript
  "futurehostile" : true,

  // Enable warnings about '__iterator__' property
  "iterator": false,

  // Prohibit use of a variable before it is defined
  "latedef": true,

  // Prohibits use of arguments.caller and arguments.callee
  "noarg": true,

  // Prohibits use of comma operator
  "nocomma": true,

  // Warns about non-breaking whitespaces
  "nonbsp": true,

  // Prohibits use of constructor without assigning of result
  "nonew": true,

  // Enable warnings about invalid 'typeof' operators
  "notypeof": false,

  // Enforce use of single quotation marks for strings
  "quotmark": "single",

  // Warns about variables that already defined in outer scope
  "shadow": "outer",

  // Enforce placing 'use strict' at the top function scope
  "strict": true,

  // Prohibit use of explicitly undeclared variables
  "undef": true,

  // Warn when variables are defined but never used
  "unused": true,


  /*
   * RELAXING OPTIONS
   * =================
   */

  // Warns about missing semicolons
  "asi": false,

  // Warns about the use of assignments in cases where comparisons are expected
  "boss": false,

  // Warns about debugger statements in code
  "debug": false,

  // Warns about == null comparisons
  "eqnull": false,

  // Warns about the use of eval
  "evil": false,

  // Warns about the use of expressions where normally you
  // would expect to see assignments or function calls
  "expr": false,

  // Warns about omitted semicolon even in last statement
  "lastsemic": false,

  // Warns about functions inside of loops
  "loopfunc": false,

  // Permits use of unary increment/decrement operators
  "plusplus": false,

  // Warns about use of __proto__ property
  "proto": false,

  // Warns about "weird" constructions like
  // new function () { ... } and new Object;
  "supernew": false,

  // Warns about possible strict violations when the code is running
  // in strict mode and you use this in a non-constructor function
  "validthis": false,

  // Warns about the use of the 'with' statement
  "withstmt": false,

  // Whitelist of global variables
  "globals": {
    "$": false,
    "$$": false,
    "app": true,
    "angular": false,
    "console": false,
    "document": false,
    "Pg": true,
    "window": false
  }
}
